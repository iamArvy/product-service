// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id         String      @id @default(cuid())
  name       String
  logo       String?
  status     StoreStatus @default(ACTIVE)
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
}

model Category {
  id          String    @id @default(cuid())
  name        String
  description String
  image       String?
  store_id    String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  products    Product[]

  @@unique([store_id, name])
}

model Product {
  id          String    @id @default(cuid())
  name        String
  description String
  store_id    String
  category_id String
  tags        String[]
  deleted_at  DateTime?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  variants    Variant[]
  category    Category  @relation(fields: [category_id], references: [id])
}

model Variant {
  id         String              @id @default(cuid())
  product_id String
  sku        String
  price      Int
  stock      Int
  deleted_at DateTime?
  created_at DateTime            @default(now())
  updated_at DateTime            @updatedAt
  product    Product             @relation(fields: [product_id], references: [id])
  attributes VariantAttributes[]
}

model VariantAttributes {
  id         String   @id @default(cuid())
  variant_id String
  key        String
  value      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  variant    Variant  @relation(fields: [variant_id], references: [id])
}

enum StoreStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}
